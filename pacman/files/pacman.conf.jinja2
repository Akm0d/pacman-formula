{%- set pacman = salt['pillar.get']('pacman', {}) -%}
#
# /etc/pacman.conf
#
# See the pacman.conf(5) manpage for option and repository directives

#
# GENERAL OPTIONS
#
[options]
{% for option in pacman.options -%}
{%- if option is string -%}
{{option}}
{% else %}
{%- for key, value in option.items() -%}
{{ key }} = {{ value }}
{% endfor -%}
{% endif %}
{%- endfor %}
# By default, pacman accepts packages signed by keys that its local keyring
# trusts (see pacman-key and its man page), as well as unsigned packages.
SigLevel    = Required DatabaseOptional
LocalFileSigLevel = Optional
RemoteFileSigLevel = Required

# NOTE: You must run `pacman-key --init` before first using pacman; the local
# keyring can then be populated with the keys of all official Arch Linux
# packagers with `pacman-key --populate archlinux`.

#
# REPOSITORIES
#   - can be defined here or included from another file
#   - pacman will search repositories in the order defined here
#   - local/custom mirrors can be added here or in separate files
#   - repositories listed first will take precedence when packages
#     have identical names, regardless of version number
#   - URLs will have $repo replaced by the name of the current repo
#   - URLs will have $arch replaced by the name of the architecture
#
# Repository entries are of the format:
#       [repo-name]
#       Server = ServerName
#       Include = IncludePath
#
# The header [repo-name] is crucial - it must be present and
# uncommented to enable the repo.
#
{% for repo in pacman.repos %}
[{{ repo.keys()[0] }}]
{%- set repo_opts = repo.values()[0] -%}
{%- for option in repo_opts -%}
{%- for key, value in option.items() %}
{%- if "unattended_upgrade" not in key %}
{{ key }} = {{ value }}
{%- endif -%}
{%- endfor -%}
{% endfor %}
{% endfor %}
